Number Bases
------------

Bases are just like writing numbers in different "languages". different digits can refer to the same numeric value. 

12 decimal apples
1100 binary apples
c hex apples

Binary
Decimal
Hexadecimal

Base 2 Binary 0,1
Base 3
Base 4
Base 5
Base 6
Base 7
Base 8 Octal 0-7
Base 9
Base 10 Decimal 0-9
Base 11
Base 12
Base 13
Base 14
Base 15
Base 16 Hexadecimal("Hex") 0 1 2 3 4 5 6 7 8 9 A B C D E F 
Base 17
*
*
*
Base 64 Base 64 0-9 A-Z a-z + /

Base is Number of digits

Counting and Places
-------------------

00
01
02
03
04
05
06
07
08
09
10
11
12
13

99
100

10^0 = 1
10^1 = 10
10^2 = 100
10^3=1000

Base 2: //Binary

          0
          1
         10
         11
        100
        101
        110
        111
       1000
       1001
       1010
       1011
       1100
       1101
       1110  14
       1111  8+ 4+ 2 + 1=15
      10000   16

      value of each place 
      2^0 = 1
      2^1 = 2
      2^2 = 4
      2^3 = 8
      2^4 = 16


      4 bits = nibble 

      Byte = num w 8 binary digits ("binary digit" == "bit")   8bits to 1 byte
      1111111111=255 Decimal
      99999

      Base 

      hex
      RR GG BB
      FF 00 AB   FF

      Conversions
      -----------

      From binary to hex:
      Each 4 bits (each nibble) is one hex digit.

      0b0011 == 0x???  ==> decimal =>  1(2) and 1(1) = 3 => hex and dec are the same after the first 10 digits => 0x3
      0b0000 == 0x0
      0b1111 == 0x => 1(1) 1(2) 1(4) 1(8) = 15 => f   f is the biggest hex digit => 0xF   => 4 bits = 1 hex digit


old school character encoding
-----------------------------
0 1 1 1 1 0 0 0 = 0b01111000
0 1 1 0 0 1 1 0 = 0b01100110
0 1 1 0 0 1 1 0 = 0b01100110
0 1 1 1 1 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 = 000000000


|||||||
|||||||
0110101

